[bundles]

common-ktor = [
    "ktor-client-core",
    "ktor-client-logging",
    "ktor-client-negotiation",
    "ktor-client-serialization"
]

scrapeIt = [
    "skrapeit-core",
    "skrapeit-async-fetcher",
    "skrapeit-ktor-extension"
]

[versions]
kotlin = "2.1.10"

agp = "8.8.1"

compose = "1.7.8"
compose-plugin = "1.8.0-alpha03"

android-minSdk = "26"
android-compileSdk = "35"
android-targetSdk = "35"

androidx-activityCompose = "1.10.0"
androidx-material = "1.10.0"
androidx-test-junit = "1.2.1"
androidx-espresso-core = "3.6.1"

coil = "3.1.0"
koin = "4.1.0-Beta5"
koinKspVersion = "2.0.0-RC5"
kotlinxCoroutinesCore = "1.10.1"
kotlinxSerializationJson = "1.8.0"
multiplatformSettings = "1.3.0"
navigationCompose = "2.8.0-alpha13"
sqldelightVersion = "2.0.2"

ktor = "3.1.0"

# Server
jdbc_sqlite = "3.43.2.2"
jooq = "3.18.7"
logbackVersion = "1.4.11"
jetbrainsKotlinJvm = "1.9.0"
ktorClientCore203 = "2.0.3"
rssparser = "6.0.6"
skrapeit = "1.3.0-alpha.2"
securityCryptoKtx = "1.1.0-alpha06"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version = "4.13.2" }

compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material = { module = "androidx.compose.material:material", version.ref = "compose" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }

androidx-security-crypto-ktx = { group = "androidx.security", name = "security-crypto", version.ref = "securityCryptoKtx" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version = "1.15.0" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }

android-sqldelight-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelightVersion" }
ios-sqldelight-driver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelightVersion" }
jvm-sqldelight-driver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelightVersion" }

coil-core = { module = "io.coil-kt.coil3:coil", version.ref = "coil" }
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-network = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }
koin-annotations = { module = "io.insert-koin:koin-annotations", version.ref = "koinKspVersion" }
koinCompiler = { module = "io.insert-koin:koin-ksp-compiler", version.ref = "koinKspVersion" }

koin-core-ktx = { module = "io.insert-koin:koin-core-ktx", version.ref = "koin" }
koin-ktor = { module = "io.insert-koin:koin-ktor", version.ref = "koin" }

collections-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version = "0.3.7" }
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutinesCore" }
datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version = "0.6.2" }
kermit = { module = "co.touchlab:kermit", version = "2.0.5" }
lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version = "2.8.4" }
multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
multiplatform-settings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatformSettings" }
navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
webview-multiplatform = { module = "io.github.kevinnzou:compose-webview-multiplatform", version = "1.9.40" }

# Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-ios = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

# Ktor server
ktor-serialization-kotlinx-json-jvm = { module = "io.ktor:ktor-serialization-kotlinx-json-jvm" }
ktor-server-auth-jvm = { module = "io.ktor:ktor-server-auth-jvm" }
ktor-server-auth-jwt-jvm = { module = "io.ktor:ktor-server-auth-jwt-jvm" }
ktor-server-auto-head-response-jvm = { module = "io.ktor:ktor-server-auto-head-response-jvm" }
ktor-server-call-logging-jvm = { module = "io.ktor:ktor-server-call-logging-jvm" }
ktor-server-config-yaml = { module = "io.ktor:ktor-server-config-yaml" }
ktor-server-content-negotiation-jvm = { module = "io.ktor:ktor-server-content-negotiation-jvm" }
ktor-server-core-jvm = { module = "io.ktor:ktor-server-core-jvm" }
ktor-server-cors-jvm = { module = "io.ktor:ktor-server-cors-jvm" }
ktor-server-netty-jvm = { module = "io.ktor:ktor-server-netty-jvm" }
ktor-server-sessions-jvm = { module = "io.ktor:ktor-server-sessions-jvm" }

# Server
jooq = { module = "org.jooq:jooq", version.ref = "jooq" }
jooq-codegen = { module = "org.jooq:jooq-codegen", version.ref = "jooq" }
jooq-kotlin = { module = "org.jooq:jooq-kotlin", version.ref = "jooq" }
jooq-coroutines = { module = "org.jooq:jooq-kotlin-coroutines", version.ref = "jooq" }
jooq-test = { module = "org.jooq:jooq-test", version.ref = "jooq" }
jooq-test-kotlin = { module = "org.jooq:jooq-test-kotlin", version.ref = "jooq" }
bouncyCastle = { module = "org.bouncycastle:bcprov-jdk15on", version = "1.70" }
flyway-core = { module = "org.flywaydb:flyway-core", version = "10.1.0" }
jdbc-sqlite = { module = "org.xerial:sqlite-jdbc", version = "3.45.2.0" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
ktor-client-core-v203 = { module = "io.ktor:ktor-client-core", version.ref = "ktorClientCore203" }
rssparser = { module = "com.prof18.rssparser:rssparser", version.ref = "rssparser" }
skrapeit-core = { module = "it.skrape:skrapeit", version.ref = "skrapeit" }
skrapeit-async-fetcher = { module = "it.skrape:skrapeit-async-fetcher", version.ref = "skrapeit" }
skrapeit-ktor-extension = { module = "it.skrape:skrapeit-ktor-extension", version.ref = "skrapeit" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
flyway = { id = "org.flywaydb.flyway", version = "10.1.0" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
jetbrainsKotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
jooq = { id = "nu.studer.jooq", version = "8.2" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kover = { id = "org.jetbrains.kotlinx.kover", version = "0.6.1" }
ksp = { id = "com.google.devtools.ksp", version = "2.1.10-1.0.30" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version = "12.0.2" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
shadowjar = { id = "com.github.johnrengelman.shadow", version = "8.1.1" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelightVersion" }
